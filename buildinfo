distName='CLCommon'
distType='lib'
depends:append{'../Common', '../Tensor'}

-- CL 1.2
--macros:append{'__CL_ENABLE_EXCEPTIONS', '__CL_OVERRIDE_ERROR_STRINGS'}
-- CL 2.0
--macros:append{'CL_HPP_TARGET_OPENCL_VERSION=200', 'CL_HPP_ENABLE_EXCEPTIONS'}
-- CL 2.2
macros:append{'CL_HPP_TARGET_OPENCL_VERSION=220', 'CL_TARGET_OPENCL_VERSION=220', 'CL_HPP_ENABLE_EXCEPTIONS', '__CL_ENABLE_EXCEPTIONS'}

local clpath = os.getenv'OPENCL_ROOT' or os.getenv'INTELOCLSDKROOT'
if clpath then
	include:insert(clpath..'/include')
end

if platform == 'msvc' or platform == 'clang_win' then
	dynamicLibs:insert'opengl32.lib'
	dynamicLibs:insert(clpath..'/lib/x64/OpenCL.lib')
end
if including then
	if platform == 'osx' then 
		linkFlags = linkFlags .. ' -framework OpenCL' 
	elseif platform == 'linux' then 
		libs:insert'OpenCL' 
	end
end
